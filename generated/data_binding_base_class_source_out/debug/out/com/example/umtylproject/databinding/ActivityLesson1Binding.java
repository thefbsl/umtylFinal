// Generated by view binder compiler. Do not edit!
package com.example.umtylproject.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.umtylproject.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLesson1Binding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnNext;

  @NonNull
  public final Button btnPrev;

  @NonNull
  public final TextView cardBack;

  @NonNull
  public final TextView cardFront;

  @NonNull
  public final Button testBtn;

  private ActivityLesson1Binding(@NonNull ConstraintLayout rootView, @NonNull Button btnNext,
      @NonNull Button btnPrev, @NonNull TextView cardBack, @NonNull TextView cardFront,
      @NonNull Button testBtn) {
    this.rootView = rootView;
    this.btnNext = btnNext;
    this.btnPrev = btnPrev;
    this.cardBack = cardBack;
    this.cardFront = cardFront;
    this.testBtn = testBtn;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLesson1Binding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLesson1Binding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_lesson1, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLesson1Binding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_next;
      Button btnNext = ViewBindings.findChildViewById(rootView, id);
      if (btnNext == null) {
        break missingId;
      }

      id = R.id.btn_prev;
      Button btnPrev = ViewBindings.findChildViewById(rootView, id);
      if (btnPrev == null) {
        break missingId;
      }

      id = R.id.card_back;
      TextView cardBack = ViewBindings.findChildViewById(rootView, id);
      if (cardBack == null) {
        break missingId;
      }

      id = R.id.card_front;
      TextView cardFront = ViewBindings.findChildViewById(rootView, id);
      if (cardFront == null) {
        break missingId;
      }

      id = R.id.testBtn;
      Button testBtn = ViewBindings.findChildViewById(rootView, id);
      if (testBtn == null) {
        break missingId;
      }

      return new ActivityLesson1Binding((ConstraintLayout) rootView, btnNext, btnPrev, cardBack,
          cardFront, testBtn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
